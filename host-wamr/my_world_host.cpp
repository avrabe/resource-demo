// Generated by `wit-bindgen` 0.1.0. DO NOT EDIT!
#include "my_world_cpp_host.h"
#include <wasm_export.h> // wasm-micro-runtime header


// Component Adapters
static ::Owned<my_interface::MyObject> host_test_example_my_interface_constructor_my_object(wasm_exec_env_t exec_env, uint32_t a) {
  auto call_result = ::test::example::my_interface::ConstructorMyObject(a);
  /* TODO handle 1460 */
}
static void host_test_example_my_interface_method_my_object.set(wasm_exec_env_t exec_env, int32_t self, uint32_t v) {
  ::test::example::my_interface::MethodMyObject.set(/* TODO handle 1265 */, v);
}
static uint32_t host_test_example_my_interface_method_my_object.get(wasm_exec_env_t exec_env, int32_t self) {
  auto call_result = ::test::example::my_interface::MethodMyObject.get(/* TODO handle 1265 */);
  return call_result;
}
void register_my_world() {
    static NativeSymbol test_example_my_interface_funs[] = {
        { "[constructor]my-object", (void*)host_test_example_my_interface_constructor_my_object, "(i)i", nullptr },
        { "[method]my-object.set", (void*)host_test_example_my_interface_method_my_object.set, "(ii)", nullptr },
        { "[method]my-object.get", (void*)host_test_example_my_interface_method_my_object.get, "(i)i", nullptr },
    };
    wasm_runtime_register_natives("test:example/my-interface", test_example_my_interface_funs, sizeof(test_example_my_interface_funs)/sizeof(NativeSymbol));
}
